{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jzasi\\\\Desktop\\\\electronic\\\\frontend\\\\src\\\\screens\\\\OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { Link } from 'react-router-dom';\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\n\nconst OrderScreen = ({\n  match\n}) => {\n  _s();\n\n  const orderId = match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const dispatch = useDispatch();\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay;\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    success: successDeliver\n  } = orderDeliver;\n  const userLogin = useSelector(state => state.orderDeliver);\n  const {\n    userInfo\n  } = userLogin;\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n  }\n\n  useEffect(() => {\n    if (!order || order._id !== orderId) {\n      dispatch(getOrderDetails(orderId));\n    }\n  }, [order, orderId, dispatch]);\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const {\n        data: clientId\n      } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n\n      script.onload = () => {\n        setSdkReady(true);\n      };\n\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || successDeliver) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, order]);\n\n  const successPaymentHandler = paymentResult => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 19\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 40\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Order \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), order.user.name, /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `mailto:${order.user.email}`,\n                children: order.user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), order.shippingAddress.address, \", \", order.shippingAddress.city, ' ', order.shippingAddress.postalCode, \",\", ' ', order.shippingAddress.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Delivered on \", order.DeliveredAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 54\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this), order.paymentMethod]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.paidAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n              children: \"Order is empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 1,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true,\n                      rounded: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/product/${item.product}`,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [item.qty, \" x $\", item.price, \" = $\", item.qty * item.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 53\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.itemsPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Shipping\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.shippingPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.taxPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [loadingPay && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 56\n              }, this), !sdkReady ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 54\n              }, this) : /*#__PURE__*/_jsxDEV(PayPalButton, {\n                amount: order.totalPrice,\n                onSuccess: successPaymentHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this), userInfo.isAdmin && order.isPaid && !order.isDelivered && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                className: \"btn btn-block\",\n                onClick: deliverHandler,\n                children: \"Mark As Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderScreen, \"ujXufjhl3DqiPk28tmFp2ZVsaKI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["C:/Users/jzasi/Desktop/electronic/frontend/src/screens/OrderScreen.js"],"names":["React","useState","useEffect","axios","PayPalButton","Row","Col","ListGroup","Image","Card","Button","useDispatch","useSelector","Message","Loader","Link","getOrderDetails","payOrder","deliverOrder","ORDER_PAY_RESET","ORDER_DELIVER_RESET","OrderScreen","match","orderId","params","id","sdkReady","setSdkReady","dispatch","orderDetails","state","order","loading","error","orderPay","loadingPay","success","successPay","orderDeliver","loadingDeliver","successDeliver","userLogin","userInfo","addDecimals","num","Math","round","toFixed","itemsPrice","orderItems","reduce","acc","item","price","qty","_id","addPayPalScript","data","clientId","get","script","document","createElement","type","src","async","onload","body","appendChild","isPaid","window","paypal","successPaymentHandler","paymentResult","console","log","deliverHandler","user","name","email","shippingAddress","address","city","postalCode","country","isDelivered","DeliveredAt","paymentMethod","paidAt","length","map","index","image","product","shippingPrice","taxPrice","totalPrice","isAdmin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Link } from 'react-router-dom'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.orderDeliver)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!order || order._id !== orderId) {\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n    }, [order, orderId, dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, orderId, successPay, order])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return (\r\n\r\n        loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> :\r\n            <>\r\n                <h1>Order {order._id}</h1>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <strong>Name: </strong>{order.user.name}\r\n                                <p><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n\r\n                                <p>\r\n                                    <strong>Address:</strong>\r\n                                    {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                                    {order.shippingAddress.postalCode},{' '}\r\n                                    {order.shippingAddress.country}\r\n                                </p>\r\n                                {order.isDelivered ? <Message variant=\"success\">Delivered on {order.DeliveredAt}</Message> :\r\n                                    <Message variant=\"danger\">Not Delivered</Message>\r\n                                }\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <p>\r\n                                    <strong>Method: </strong>\r\n                                    {order.paymentMethod}\r\n                                </p>\r\n                                {order.isPaid ? <Message variant=\"success\">Paid on {order.paidAt}</Message> :\r\n                                    <Message variant=\"danger\">Not Paid</Message>\r\n                                }\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0 ? (\r\n                                    <Message>Order is empty</Message>\r\n                                ) : (\r\n                                        <ListGroup variant='flush'>\r\n                                            {order.orderItems.map((item, index) => (\r\n                                                <ListGroup.Item key={index}>\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image\r\n                                                                src={item.image}\r\n                                                                alt={item.name}\r\n                                                                fluid\r\n                                                                rounded\r\n                                                            />\r\n                                                        </Col>\r\n                                                        <Col>\r\n                                                            <Link to={`/product/${item.product}`}>\r\n                                                                {item.name}\r\n                                                            </Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            ))}\r\n                                        </ListGroup>\r\n                                    )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items</Col>\r\n                                        <Col>${order.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping</Col>\r\n                                        <Col>${order.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax</Col>\r\n                                        <Col>${order.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total</Col>\r\n                                        <Col>${order.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                {!order.isPaid && (\r\n                                    <ListGroup.Item>\r\n                                        {loadingPay && <Loader />}\r\n                                        {!sdkReady ? <Loader /> : (\r\n                                            <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n"]},"metadata":{},"sourceType":"module"}